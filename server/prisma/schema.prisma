generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider = "sqlserver"
  url      = env("LTI_DATABASE_URL")
}

model Student {
  id                       Int                       @id @default(autoincrement())
  name                     String
  neptun                   String                    @unique
  studentCourseCompletions StudentCourseCompletion[]
  studentTopicPreferences  StudentTopicPreference[]

  @@map("student")
}

model Instructor {
  id      Int      @id @default(autoincrement())
  name    String
  neptun  String   @unique
  min     Int
  max     Int
  isAdmin Boolean? @map("is_admin")
  topics  Topic[]

  @@map("instructor")
}

model Topic {
  id                      Int                      @id @default(autoincrement())
  title                   String
  description             String
  capacity                Int
  type                    String
  instructorId            Int                      @map("instructor_id")
  language                String                   @default("hu")
  studentTopicPreferences StudentTopicPreference[]
  instructor              Instructor               @relation(fields: [instructorId], references: [id])
  topicCoursePreferences  TopicCoursePreference[]

  @@unique([title, instructorId])
  @@map("topic")
}

model Course {
  id                       Int                       @id @default(autoincrement())
  code                     String                    @unique
  name                     String
  credit                   Int
  studentCourseCompletions StudentCourseCompletion[]
  topicCoursePreferences   TopicCoursePreference[]

  @@map("course")
}

model StudentCourseCompletion {
  studentId Int     @map("student_id")
  courseId  Int     @map("course_id")
  grade     Int
  course    Course  @relation(fields: [courseId], references: [id])
  student   Student @relation(fields: [studentId], references: [id])

  @@id([studentId, courseId])
  @@map("student_course_completion")
}

model StudentTopicPreference {
  studentId Int     @map("student_id")
  topicId   Int     @map("topic_id")
  rank      Int
  student   Student @relation(fields: [studentId], references: [id])
  topic     Topic   @relation(fields: [topicId], references: [id])

  @@id([studentId, topicId])
  @@map("student_topic_preference")
}

model TopicCoursePreference {
  topicId  Int     @map("topic_id")
  courseId Int     @map("course_id")
  weight   Decimal
  course   Course  @relation(fields: [courseId], references: [id])
  topic    Topic   @relation(fields: [topicId], references: [id])

  @@id([topicId, courseId])
  @@map("topic_course_preference")
}
